
extend type Query{
    getTaskById(taskId : ID!): TaskDTO
    getAllTaskByProjectId(projectId : ID!) : [TaskDTO]
}

extend type Mutation{
    createTask(task: TaskInputDTO): TaskDTO
    deleteTask(taskId: ID!) : Boolean
    updateTask(task: TaskInputDTO) : TaskDTO
    addTaskOnEpic(epicId: ID!, taskId:ID!) : ResponseDTO
}


type TaskDTO {
    id : ID!
    title: String
    description: String
    project: String
    assignees: [String]
    creator: String
    createdDate: String
    updatedDate: String
    status: IssueStatus
    priority: Priority
    tag: IssueTag

    isBlocking : Boolean
    memberId : [String]
    epic : EpicDTO
    subTasks : [SubTaskDTO]
}

input TaskInputDTO{
    title: String
    description: String
    project: String
    assignees: [String]
    creator: String
    createdDate: String
    updatedDate: String
    status: IssueStatus
    priority: Priority
    tag: IssueTag

    isBlocking : Boolean
    memberId : [String]
}


